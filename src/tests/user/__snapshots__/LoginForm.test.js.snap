// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginForm /> renders properly with default props 1`] = `
<div
  className="login-form"
>
  <h1
    className="login-form__header"
  >
    Login
  </h1>
  <form
    className="login-form__content"
    onSubmit={[Function]}
  >
    <Input
      error=""
      label="Username"
      name="username"
      onChange={[Function]}
      type="text"
      validationSchema={
        StringSchema {
          "_blacklist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "required": true,
          },
          "_label": "Username",
          "_mutate": undefined,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "tests": Array [
            [Function],
          ],
          "transforms": Array [
            [Function],
          ],
        }
      }
      value=""
    />
    <Input
      error=""
      label="Password"
      name="password"
      onChange={[Function]}
      type="password"
      validationSchema={
        StringSchema {
          "_blacklist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "required": true,
          },
          "_label": "Password",
          "_mutate": undefined,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "tests": Array [
            [Function],
          ],
          "transforms": Array [
            [Function],
          ],
        }
      }
      value=""
    />
    <button
      className="button button--solid login-form-button"
      disabled={
        Object {
          "password": "Password is a required field",
          "username": "Username is a required field",
        }
      }
      type="submit"
    >
      Login
    </button>
  </form>
</div>
`;
